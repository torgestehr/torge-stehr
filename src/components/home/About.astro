---
import { Picture } from 'astro:assets';
import torgestehr from '../../assets/torge-stehr.jpeg';
import { getLangFromUrl, useTranslations } from '../../utils/i18n/utils';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<section>
    <h2 class="title">{t('about.title')}</h2>
    <div class="grid">
        <Picture src={torgestehr} formats={['webp']} alt="Torge Stehr" title="Torge Stehr" fetchpriority="high" />
        <div class="content">
            <p class="text" set:html={t('about.text')} />
            <div>
                <input id="date-format" type="hidden" value={t('about.date-format')} />
                <p>{t('about.time')}&nbsp;</p>
                <p id="time"></p>
            </div>
        </div>
    </div>
</section>

<style lang="scss">
    @use '/src/styles/variables' as *;

    section {
        position: relative;
        display: flex;
        align-items: flex-start;
        justify-content: flex-start;
        flex-direction: column;
        padding: 140px 0;
        width: 100%;
        min-width: 100%;
        border-top: 2px solid $black;

        @media (max-width: 930px) {
            padding-top: 100px;
            padding-bottom: 80px;
        }

        .title {
            position: absolute;
            top: 20px;
            margin: 0;
            padding-left: 16px;
            color: $black;
            font-weight: 500;
            font-size: 16px;
            line-height: 20px;
            text-transform: uppercase;
            transition: color 0.3s cubic-bezier(0.47, 0, 0.745, 0.715);

            &::before {
                content: '';
                position: absolute;
                top: 50%;
                left: 0;
                transform: translateY(-50%);
                width: 10px;
                height: 10px;
                border-radius: 50%;
                background: $black;
            }
        }

        .grid {
            display: grid;
            grid-template-columns: 40% 60%;
            align-items: center;
            justify-content: flex-start;
            width: 100%;

            @media (max-width: 930px) {
                grid-template-columns: 1fr;
            }

            picture {
                position: relative;
                width: 100%;
                height: auto;

                @media (max-width: 930px) {
                    max-width: 350px;
                }

                @media (max-width: 740px) {
                    max-width: 300px;
                }

                @media (max-width: 500px) {
                    max-width: 100%;
                }

                img {
                    width: 100%;
                    height: auto;
                }
            }

            .content {
                display: flex;
                align-items: flex-start;
                justify-content: flex-start;
                flex-direction: column;
                padding: 6vw;

                @media (max-width: 1250px) {
                    padding-right: 0;
                }

                @media (max-width: 930px) {
                    padding: 6vw;
                    padding-bottom: 0;
                }

                @media (max-width: 740px) {
                    padding: 8vw;
                    padding-bottom: 0;
                }

                @media (max-width: 420px) {
                    padding: 6vw 4vw 0 6vw;
                }

                .text {
                    margin: 0;
                    color: $black;
                    font-size: 32px;
                    line-height: 45px;
                    font-weight: 500;

                    @media (max-width: 1470px) {
                        font-size: 28px;
                        line-height: 42px;
                    }

                    @media (max-width: 1130px) {
                        font-size: 24px;
                        line-height: 34px;
                    }

                    @media (max-width: 930px) {
                        font-size: 4vw;
                        line-height: 6.5vw;
                    }

                    @media (max-width: 500px) {
                        font-size: 5vw;
                        line-height: 8vw;
                    }

                    @media (max-width: 420px) {
                        font-size: 5.5vw;
                        line-height: 8vw;
                    }
                }

                div {
                    display: flex;
                    align-items: center;
                    justify-content: flex-start;

                    p {
                        margin: 0;
                        margin-top: 10px;
                        color: $black;
                        font-weight: 500;
                        font-size: 16px;
                        line-height: 20px;
                        text-transform: uppercase;

                        @media (max-width: 400px) {
                            font-size: 14px;
                        }
                    }
                }
            }
        }
    }
</style>

<script>
    function updateClock() {
        const dateFormat = (document.getElementById('date-format')! as HTMLInputElement).value;
        const now = new Date();
        const timeZone: string = 'America/Vancouver';
        const formatter = new Intl.DateTimeFormat(dateFormat ?? 'en-US', { timeZone: timeZone, hour: '2-digit', minute: '2-digit', second: '2-digit' });
        document.getElementById('time')!.textContent = formatter.format(now);
    }

    updateClock();
    setInterval(updateClock, 500);
</script>
